apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: backend-feed
  name: backend-feed-v1
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      service: backend-feed
      version: v1
  template:
    metadata:
      labels:
        service: backend-feed
        version: v1
    spec:
      containers:
      - image: vschau/udacity-restapi-feed
        name: backend-feed
        imagePullPolicy: Always  
        resources:
          requests:
            memory: "64Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "400m"
        readinessProbe:
          exec:
            command:
            - cat
            - ./src/config/config.ts
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1  
        env:
        - name: URL
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: URL
        - name: AWS_BUCKET
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: AWS_BUCKET
        - name: AWS_PROFILE
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: AWS_PROFILE
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: AWS_REGION
        - name: JWT_SECRET
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: JWT_SECRET
        - name: POSTGRESS_DB
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: POSTGRESS_DB
        - name: POSTGRESS_HOST
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: POSTGRESS_HOST
        - name: POSTGRESS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: env-secret
              key: POSTGRESS_PASSWORD
        - name: POSTGRESS_USERNAME
          valueFrom:
            secretKeyRef:
              name: env-secret
              key: POSTGRESS_USERNAME      
        volumeMounts:
        - name: aws-secret
          mountPath: "/root/.aws/"
          readOnly: true        
      restartPolicy: Always
      volumes:
      - name: aws-secret
        secret:
          secretName: aws-secret